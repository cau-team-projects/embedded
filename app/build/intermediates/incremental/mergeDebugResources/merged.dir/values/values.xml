<?xml version="1.0" encoding="utf-8"?>
<resources>
    <integer-array name="intervals">
          <item>1693</item>
          <item>1524</item>
          <item>1372</item>
          <item>1235</item>
          <item>1111</item>
          <item>900</item>
          <item>810</item>
          <item>729</item>
          <item>656</item>
          <item>590</item>
          <item>531</item>
          <item>478</item>
          <item>430</item>
          <item>387</item>
          <item>349</item>
          <item>314</item>
          <item>282</item>
          <item>254</item>
          <item>229</item>
          <item>206</item>
          <item>185</item>
          <item>167</item>
          <item>150</item>
          <item>135</item>
          <item>122</item>
          <item>109</item>
          <item>98</item>
          <item>89</item>
          <item>80</item>
          <item>72</item>
          <item>65</item>
     </integer-array>
    <integer-array name="line_thresholds">
          <item>10</item>
          <item>20</item>
          <item>30</item>
          <item>40</item>
          <item>50</item>
          <item>60</item>
          <item>70</item>
          <item>80</item>
          <item>90</item>
          <item>100</item>
          <item>110</item>
          <item>120</item>
          <item>130</item>
          <item>140</item>
          <item>150</item>
          <item>160</item>
          <item>170</item>
          <item>180</item>
          <item>190</item>
          <item>200</item>
          <item>210</item>
          <item>220</item>
          <item>230</item>
          <item>240</item>
          <item>250</item>
          <item>260</item>
          <item>270</item>
          <item>280</item>
          <item>290</item>
          <item>300</item>
          <item>310</item>
          <item>320</item>
          <item>330</item>
          <item>340</item>
          <item>350</item>
          <item>360</item>
          <item>370</item>
          <item>380</item>
          <item>390</item>
          <item>400</item>
          <item>410</item>
          <item>420</item>
          <item>430</item>
          <item>440</item>
          <item>450</item>
          <item>460</item>
          <item>470</item>
          <item>480</item>
          <item>490</item>
          <item>500</item>
     </integer-array>
    <string-array name="randomizer_preference_array">
        <item>7-Bag-Randomization (default)</item>
        <item>Plain Random</item>
    </string-array>
    <string-array name="randomizer_preference_values">
        <item>sevenbag</item>
        <item>plain</item>
    </string-array>
    <attr format="reference" name="coordinatorLayoutStyle"/>
    <color name="black_overlay">#66000000</color>
    <color name="darkbluegreen">#FF408080</color>
    <color name="holo_grey">#FF4D4D4D</color>
    <color name="notification_action_color_filter">#ffffffff</color>
    <color name="notification_icon_bg_color">#ff9e9e9e</color>
    <color name="notification_material_background_media_default_color">#ff424242</color>
    <color name="primary_text_default_material_dark">#ffffffff</color>
    <color name="ripple_material_light">#1f000000</color>
    <color name="secondary_text_default_material_dark">#b3ffffff</color>
    <color name="secondary_text_default_material_light">#8a000000</color>
    <color name="square_blue">#BC8DBF</color>
    <color name="square_cyan">#7BCDC8</color>
    <color name="square_empty">#00000000</color>
    <color name="square_error">#FFFFFF</color>
    <color name="square_green">#ACD372</color>
    <color name="square_magenta">#998675</color>
    <color name="square_orange">#FBAF5C</color>
    <color name="square_red">#F7977A</color>
    <color name="square_yellow">#FFF467</color>
    <color name="standardGameBackground">#303030</color>
    <color name="transparent">#00000000</color>
    <color name="yellow">#ffffff30</color>
    <dimen name="activity_horizontal_margin">16dp</dimen>
    <dimen name="activity_vertical_margin">16dp</dimen>
    <dimen name="compat_button_inset_horizontal_material">4dp</dimen>
    <dimen name="compat_button_inset_vertical_material">6dp</dimen>
    <dimen name="compat_button_padding_horizontal_material">8dp</dimen>
    <dimen name="compat_button_padding_vertical_material">4dp</dimen>
    <dimen name="compat_control_corner_material">2dp</dimen>
    <dimen name="compat_notification_large_icon_max_height">320dp</dimen>
    <dimen name="compat_notification_large_icon_max_width">320dp</dimen>
    <dimen name="notification_action_icon_size">32dp</dimen>
    <dimen name="notification_action_text_size">13sp</dimen>
    <dimen name="notification_big_circle_margin">12dp</dimen>
    <dimen name="notification_content_margin_start">8dp</dimen>
    <dimen name="notification_large_icon_height">64dp</dimen>
    <dimen name="notification_large_icon_width">64dp</dimen>
    <dimen name="notification_main_column_padding_top">10dp</dimen>
    <dimen name="notification_media_narrow_margin">@dimen/notification_content_margin_start</dimen>
    <dimen name="notification_right_icon_size">16dp</dimen>
    <dimen name="notification_right_side_padding_top">2dp</dimen>
    <dimen name="notification_small_icon_background_padding">3dp</dimen>
    <dimen name="notification_small_icon_size_as_large">24dp</dimen>
    <dimen name="notification_subtext_size">13sp</dimen>
    <dimen name="notification_top_pad">10dp</dimen>
    <dimen name="notification_top_pad_large_text">5dp</dimen>
    <dimen name="subtitle_corner_radius">2dp</dimen>
    <dimen name="subtitle_outline_width">2dp</dimen>
    <dimen name="subtitle_shadow_offset">2dp</dimen>
    <dimen name="subtitle_shadow_radius">2dp</dimen>
    <drawable name="notification_template_icon_bg">#3333B5E5</drawable>
    <drawable name="notification_template_icon_low_bg">#0cffffff</drawable>
    <item name="line1" type="id"/>
    <item name="line3" type="id"/>
    <item name="tag_transition_group" type="id"/>
    <item name="tag_unhandled_key_event_manager" type="id"/>
    <item name="tag_unhandled_key_listeners" type="id"/>
    <item name="text" type="id"/>
    <item name="text2" type="id"/>
    <item name="title" type="id"/>
    <integer name="audio_streams">16</integer>
    <integer name="cancel_button_image_alpha">127</integer>
    <integer name="clearAnimation_burstDuration">200</integer>
    <integer name="clearAnimation_enableBurst">0</integer>
    <integer name="clearAnimation_enableFlash">1</integer>
    <integer name="clearAnimation_flashCount">3</integer>
    <integer name="clearAnimation_flashInterval">200</integer>
    <integer name="doubleLineScore">300</integer>
    <integer name="hardDropBonus">2</integer>
    <integer name="levels">30</integer>
    <integer name="levelsplusone">31</integer>
    <integer name="multiTetrisScore">1200</integer>
    <integer name="padding_columns">2</integer>
    <integer name="phantom_alpha">93</integer>
    <integer name="piece_start_x">3</integer>
    <integer name="popup_attack">125</integer>
    <integer name="popup_decay">300</integer>
    <integer name="popup_sustain">1050</integer>
    <integer name="quadLineScore">800</integer>
    <integer name="shortVibeInterval">100</integer>
    <integer name="singleLineScore">100</integer>
    <integer name="softDropBonus">1</integer>
    <integer name="spalten">10</integer>
    <integer name="spaltenoffset">35</integer>
    <integer name="spawn_delay">200</integer>
    <integer name="status_bar_notification_info_maxnum">999</integer>
    <integer name="textalpha">192</integer>
    <integer name="trippleLineScore">500</integer>
    <integer name="zeilen">18</integer>
    <integer name="zeilenoffset">0</integer>
    <string name="action_about">About</string>
    <string name="action_backtomain">Back</string>
    <string name="action_donate">Donate</string>
    <string name="action_help">Help</string>
    <string name="action_settings">Settings</string>
    <string name="anonymous">Anonymous</string>
    <string name="apmLabel">Total APM:</string>
    <string name="apm_title">APM</string>
    <string name="app_name">Blockinger</string>
    <string name="defeatDialogReturn">Back</string>
    <string name="defeatDialogTitle">Game Over</string>
    <string name="donate_button">Go to Paypal</string>
    <string name="donation_url">"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=H6VS9SNRHMJSS"</string>
    <string name="fps_title">FPS</string>
    <string name="highscoreListDescription">Highscores</string>
    <string name="highscore_title">Highscores</string>
    <string name="hint">Hint: Blockinger is playable in both screen orientations.</string>
    <string name="holdbuttonstring">Hold</string>
    <string name="level_title">Level</string>
    <string name="license_url">http://www.gnu.org/licenses/gpl-3.0</string>
    <string name="movespeed_pref_title">Horizontal Speed</string>
    <string name="musicAuthorNote">music by pornophonique</string>
    <string name="music_url">http://www.pornophonique.de</string>
    <string name="musicvolume_pref_title">Music Volume</string>
    <string name="pausebutton">Pause</string>
    <string name="playerNameInputFieldHint">Choose your player name</string>
    <string name="pref_accelerationH_summary">Short delay after the initial move. Useful for beginners</string>
    <string name="pref_accelerationH_title">Horizontal Acceleration</string>
    <string name="pref_accelerationV_summary">Short delay after the initial move. Useful for beginners</string>
    <string name="pref_accelerationV_title">Soft Drop Acceleration</string>
    <string name="pref_antialiasing_summary">Improves the display quality of text. Disable this for better performance</string>
    <string name="pref_antialiasing_title">Text Anti-Aliasing</string>
    <string name="pref_author_summary">Simon Willeke\nTouch here to contact the author for suggestions, feedback or anything related to this project</string>
    <string name="pref_author_title">Author</string>
    <string name="pref_author_url">rasyl@web.de</string>
    <string name="pref_button_sound_summary">Provides auditory feedback when pressing the game buttons</string>
    <string name="pref_button_sound_title">Button Sound</string>
    <string name="pref_category_advanced">Advanced</string>
    <string name="pref_category_layout">LAYOUT</string>
    <string name="pref_category_other">OTHER</string>
    <string name="pref_category_sound">SOUND</string>
    <string name="pref_category_vibration">VIBRATION</string>
    <string name="pref_donate_summary">If you are grateful for this Software and would like to let the Author benefit as well, you can place a Donation as you like.</string>
    <string name="pref_donate_title">Donate</string>
    <string name="pref_fps_summary">The current Frames per Second will be shown below "APM"</string>
    <string name="pref_fps_title">Show FPS</string>
    <string name="pref_fpslimit_summary">Significantly lowers power consumption but may slow down the game</string>
    <string name="pref_fpslimit_title">Limit FPS</string>
    <string name="pref_fpslimittext_default">30</string>
    <string name="pref_fpslimittext_summary">The game tries to maintain this frame rate as closely as possible</string>
    <string name="pref_fpslimittext_title">Target FPS</string>
    <string name="pref_help_apm_message">APM means \"Actions Per Minute\".\nThis is a measurement of the player\'s finger speed.</string>
    <string name="pref_help_apm_summary">What does APM mean?</string>
    <string name="pref_help_apm_title">APM</string>
    <string name="pref_help_fps_message">FPS means \"Frames Per Second\".\nThis measures the frequency of display updates. Low FPS can be notices by slow reactions from the game and choppy displaying. High FPS on the other hand consume more power. A good trade-off between display smoothness and power consumption can be achieved between 25 and 35 FPS.\nFPS can be limited in advanced settings.</string>
    <string name="pref_help_fps_summary">What does FPS mean? What is it useful for?</string>
    <string name="pref_help_fps_title">FPS</string>
    <string name="pref_help_levels_message">Levels are a measurement of difficulty.\nThe speed at which pieces automatically drop down increases by 10% per level.\nThe current level increases after clearing 10 additional lines.</string>
    <string name="pref_help_levels_summary">What do Levels mean?</string>
    <string name="pref_help_levels_title">Levels</string>
    <string name="pref_help_randomizer_message">7-Bag-Randomization:\nGenerates randomly permutated sequences of all 7 pieces. This means, that the player can never encounter 3 identical pieces in a row.\n\nPlain Random:\nThe next piece will be independently generated at random.</string>
    <string name="pref_help_randomizer_summary">What is the difference between the two randomizer modes? (advanced settings)</string>
    <string name="pref_help_randomizer_title">Randomizer</string>
    <string name="pref_help_resumability_message">The game is resumable from the main screen, if the \"Pause\" button or the native android \"Back\" button was hit.\nThe game is also resumable, if the player switches to another application or the home screen and doesn\'t exit Blockinger.\nThe game will not be resumable, if the \"Exit\" menu entry was hit from the main screen.</string>
    <string name="pref_help_resumability_summary">Under which conditions is an interrupted game resumable?</string>
    <string name="pref_help_resumability_title">Resumability</string>
    <string name="pref_help_scoring_message">Basic points per cleared line are:\n100 points for 1 line,\n300 points for 2 lines,\n500 points for 3 lines,\n800 points for 4 lines (called \"Tetris\").\n\nScoring consecutive Tetrises provides 400 bonus points per Tetris.\nAdditionally the player receives a bonus score for using Soft and Hard Drops. Soft Drops award 1 point per dropped line, while Hard Drops award 2 points per dropped line.</string>
    <string name="pref_help_scoring_summary">How does the scoring work?</string>
    <string name="pref_help_scoring_title">Scoring</string>
    <string name="pref_help_vibration_message">There are some problems with the vibration functionality that can occur on a few devices.\nAlso most tablet devices don\'t support Vibration at all.\nIf your device does support vibration but you don\'t notice the button vibrations, you can increase the vibration duration. This setting is called \"Button Vibration Duration\" and can be found under advanced settings.\nThe duration of button vibrations should be adjusted to be just barely noticeable.</string>
    <string name="pref_help_vibration_summary">How to achieve an optimal haptic feedback with vibration.</string>
    <string name="pref_help_vibration_title">Vibration</string>
    <string name="pref_layoutswap_summary">Swap the position of soft drop button and hard drop button</string>
    <string name="pref_layoutswap_title">Swap Drop Buttons</string>
    <string name="pref_license_music_summary">\"lemmings in love (karaoke)\" and \"sad robot (karaoke)\" by Pornophonique. Licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Germany license (CC BY-NC-SA 3.0 DE).\nTouch here to open the artist\'s website</string>
    <string name="pref_license_music_title">Music Attribution</string>
    <string name="pref_license_summary">Blockinger is free software: licensed under the GNU General Public License (GPLv3) as published by the Free Software Foundation.\nTouch here to view this license online</string>
    <string name="pref_license_title">License Information</string>
    <string name="pref_phantom_summary">Shows the drop location of the active piece</string>
    <string name="pref_phantom_title">Phantom</string>
    <string name="pref_popup_summary">For successful line clears</string>
    <string name="pref_popup_title">Pop-Up Text</string>
    <string name="pref_rng_summary">Choose how the sequence of pieces is generated. 7-Bag-Randomization is highly recommended and is also used in competitive Tetris</string>
    <string name="pref_rng_title">Piece Generation</string>
    <string name="pref_rngs_default">sevenbag</string>
    <string name="pref_version_summary">1.8.2\nTouch here to view the public repository of this project</string>
    <string name="pref_version_title">Version</string>
    <string name="pref_vibDurOffset_default">15</string>
    <string name="pref_vibDurOffset_summary">Increase this time to compensate for the delay of your phone\'s vibrator. The duration of button vibrations should be adjusted to be just barely noticeable.\nTime in milliseconds</string>
    <string name="pref_vibDurOffset_title">Button Vibration Duration</string>
    <string name="pref_vibration_button_summary">Vibrates shortly when pressing the game buttons</string>
    <string name="pref_vibration_button_title">Button Vibration</string>
    <string name="pref_vibration_events_summary">Vibrates on important game events</string>
    <string name="pref_vibration_events_title">Event Vibration</string>
    <string name="quitButtonString">Exit</string>
    <string name="repository_url">https://github.com/vocollapse/Blockinger</string>
    <string name="resumeButtonString">Resume Game</string>
    <string name="scoreLabel">Score:</string>
    <string name="score_title">Score</string>
    <string name="softdropspeed_pref_title">Soft Drop Speed</string>
    <string name="soundvolume_pref_title">Effects Volume</string>
    <string name="startButtonString">New Game</string>
    <string name="startLevelDialogCancel">Cancel</string>
    <string name="startLevelDialogStart">Start</string>
    <string name="startLevelDialogTitle">Starting Level</string>
    <string name="status_bar_notification_info_overflow">999+</string>
    <string name="tab">\u0009</string>
    <string name="timeLabel">Time:</string>
    <string name="time_title">Time</string>
    <string name="title_activity_about">About</string>
    <string name="title_activity_donate">Donate</string>
    <string name="title_activity_game">Blockinger</string>
    <string name="title_activity_help">Help</string>
    <string name="title_activity_settings">Settings</string>
    <style name="AppBaseTheme" parent="android:Theme.Black">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->
    </style>
    <style name="AppTheme" parent="AppBaseTheme">
        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
    </style>
    <style name="ButtonBar">
        <item name="android:paddingLeft">2dp</item>
        <item name="android:paddingTop">5dp</item>
        <item name="android:paddingRight">2dp</item>
        <item name="android:paddingBottom">0dp</item>
        <item name="android:background">@android:drawable/bottom_bar</item>
    </style>
    <style name="ButtonBarButton"/>
    <style name="FullscreenTheme" parent="android:Theme.NoTitleBar">
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowBackground">@null</item>
        <item name="buttonBarStyle">@null</item>
        <item name="buttonBarButtonStyle">@null</item>
        <!--<item name="buttonBarStyle">@style/ButtonBar</item>  -->
         <!--<item name="buttonBarButtonStyle">@style/ButtonBarButton</item>  -->
    </style>
    <style name="TextAppearance.Compat.Notification" parent="@android:style/TextAppearance.StatusBar.EventContent"/>
    <style name="TextAppearance.Compat.Notification.Info">
        <item name="android:textSize">12sp</item>
        <item name="android:textColor">?android:attr/textColorSecondary</item>
    </style>
    <style name="TextAppearance.Compat.Notification.Info.Media"/>
    <style name="TextAppearance.Compat.Notification.Line2" parent="TextAppearance.Compat.Notification.Info"/>
    <style name="TextAppearance.Compat.Notification.Line2.Media" parent="TextAppearance.Compat.Notification.Info.Media"/>
    <style name="TextAppearance.Compat.Notification.Media"/>
    <style name="TextAppearance.Compat.Notification.Time">
        <item name="android:textSize">12sp</item>
        <item name="android:textColor">?android:attr/textColorSecondary</item>
    </style>
    <style name="TextAppearance.Compat.Notification.Time.Media"/>
    <style name="TextAppearance.Compat.Notification.Title" parent="@android:style/TextAppearance.StatusBar.EventContent.Title"/>
    <style name="TextAppearance.Compat.Notification.Title.Media"/>
    <style name="Widget.Compat.NotificationActionContainer" parent=""/>
    <style name="Widget.Compat.NotificationActionText" parent=""/>
    <style name="Widget.Support.CoordinatorLayout" parent="android:Widget">
        <item name="statusBarBackground">#000000</item>
    </style>
    <declare-styleable name="ButtonBarContainerTheme">
        <attr format="reference" name="buttonBarStyle"/>
        <attr format="reference" name="buttonBarButtonStyle"/>
    </declare-styleable>
    <declare-styleable name="ColorStateListItem">
        <!-- Base color for this state. -->
        <attr name="android:color"/>
        <!-- Alpha multiplier applied to the base color. -->
        <attr format="float" name="alpha"/>
        <attr name="android:alpha"/>
    </declare-styleable>
    <declare-styleable name="CoordinatorLayout">
        <!-- A reference to an array of integers representing the
             locations of horizontal keylines in dp from the starting edge.
             Child views can refer to these keylines for alignment using
             layout_keyline="index" where index is a 0-based index into
             this array. -->
        <attr format="reference" name="keylines"/>
        <!-- Drawable to display behind the status bar when the view is set to draw behind it. -->
        <attr format="color|reference" name="statusBarBackground"/>
    </declare-styleable>
    <declare-styleable name="CoordinatorLayout_Layout">
        <attr name="android:layout_gravity"/>
        <!-- The class name of a Behavior class defining special runtime behavior
             for this child view. -->
        <attr format="string" name="layout_behavior"/>
        <!-- The id of an anchor view that this view should position relative to. -->
        <attr format="reference" name="layout_anchor"/>
        <!-- The index of a keyline this view should position relative to.
             android:layout_gravity will affect how the view aligns to the
             specified keyline. -->
        <attr format="integer" name="layout_keyline"/>

        <!-- Specifies how an object should position relative to an anchor, on both the X and Y axes,
             within its parent's bounds.  -->
        <attr name="layout_anchorGravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07"/>
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77"/>
            <!-- Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80"/>
            <!-- Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08"/>
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>

        <!-- Specifies how this view insets the CoordinatorLayout and make some other views
             dodge it. -->
        <attr format="enum" name="layout_insetEdge">
            <!-- Don't inset. -->
            <enum name="none" value="0x0"/>
            <!-- Inset the top edge. -->
            <enum name="top" value="0x30"/>
            <!-- Inset the bottom edge. -->
            <enum name="bottom" value="0x50"/>
            <!-- Inset the left edge. -->
            <enum name="left" value="0x03"/>
            <!-- Inset the right edge. -->
            <enum name="right" value="0x05"/>
            <!-- Inset the start edge. -->
            <enum name="start" value="0x00800003"/>
            <!-- Inset the end edge. -->
            <enum name="end" value="0x00800005"/>
        </attr>
        <!-- Specifies how this view dodges the inset edges of the CoordinatorLayout. -->
        <attr name="layout_dodgeInsetEdges">
            <!-- Don't dodge any edges -->
            <flag name="none" value="0x0"/>
            <!-- Dodge the top inset edge. -->
            <flag name="top" value="0x30"/>
            <!-- Dodge the bottom inset edge. -->
            <flag name="bottom" value="0x50"/>
            <!-- Dodge the left inset edge. -->
            <flag name="left" value="0x03"/>
            <!-- Dodge the right inset edge. -->
            <flag name="right" value="0x05"/>
            <!-- Dodge the start inset edge. -->
            <flag name="start" value="0x00800003"/>
            <!-- Dodge the end inset edge. -->
            <flag name="end" value="0x00800005"/>
            <!-- Dodge all the inset edges. -->
            <flag name="all" value="0x77"/>
        </attr>
    </declare-styleable>
    <declare-styleable name="FontFamily">
        <!-- The authority of the Font Provider to be used for the request. -->
        <attr format="string" name="fontProviderAuthority"/>
        <!-- The package for the Font Provider to be used for the request. This is used to verify
        the identity of the provider. -->
        <attr format="string" name="fontProviderPackage"/>
        <!-- The query to be sent over to the provider. Refer to your font provider's documentation
        on the format of this string. -->
        <attr format="string" name="fontProviderQuery"/>
        <!-- The sets of hashes for the certificates the provider should be signed with. This is
        used to verify the identity of the provider, and is only required if the provider is not
        part of the system image. This value may point to one list or a list of lists, where each
        individual list represents one collection of signature hashes. Refer to your font provider's
        documentation for these values. -->
        <attr format="reference" name="fontProviderCerts"/>
        <!-- The strategy to be used when fetching font data from a font provider in XML layouts.
        This attribute is ignored when the resource is loaded from code, as it is equivalent to the
        choice of API between {@link
    androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
        {@link
    androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
        (async). -->
        <attr name="fontProviderFetchStrategy">
            <!-- The blocking font fetch works as follows.
              First, check the local cache, then if the requested font is not cached, request the
              font from the provider and wait until it is finished.  You can change the length of
              the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
              default typeface will be used instead. -->
            <enum name="blocking" value="0"/>
            <!-- The async font fetch works as follows.
              First, check the local cache, then if the requeted font is not cached, trigger a
              request the font and continue with layout inflation. Once the font fetch succeeds, the
              target text view will be refreshed with the downloaded font data. The
              fontProviderFetchTimeout will be ignored if async loading is specified. -->
            <enum name="async" value="1"/>
        </attr>
        <!-- The length of the timeout during fetching. -->
        <attr format="integer" name="fontProviderFetchTimeout">
            <!-- A special value for the timeout. In this case, the blocking font fetching will not
              timeout and wait until a reply is received from the font provider. -->
            <enum name="forever" value="-1"/>
        </attr>
    </declare-styleable>
    <declare-styleable name="FontFamilyFont">
        <!-- The style of the given font file. This will be used when the font is being loaded into
         the font stack and will override any style information in the font's header tables. If
         unspecified, the value in the font's header tables will be used. -->
        <attr name="fontStyle">
            <enum name="normal" value="0"/>
            <enum name="italic" value="1"/>
        </attr>
        <!-- The reference to the font file to be used. This should be a file in the res/font folder
         and should therefore have an R reference value. E.g. @font/myfont -->
        <attr format="reference" name="font"/>
        <!-- The weight of the given font file. This will be used when the font is being loaded into
         the font stack and will override any weight information in the font's header tables. Must
         be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
         common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
         in the font's header tables will be used. -->
        <attr format="integer" name="fontWeight"/>
        <!-- The variation settings to be applied to the font. The string should be in the following
         format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
         used, or the font used does not support variation settings, this attribute needs not be
         specified. -->
        <attr format="string" name="fontVariationSettings"/>
        <!-- The index of the font in the tcc font file. If the font file referenced is not in the
        tcc format, this attribute needs not be specified. -->
        <attr format="integer" name="ttcIndex"/>
        <!-- References to the framework attrs -->
        <attr name="android:fontStyle"/>
        <attr name="android:font"/>
        <attr name="android:fontWeight"/>
        <attr name="android:fontVariationSettings"/>
        <attr name="android:ttcIndex"/>
    </declare-styleable>
    <declare-styleable name="GradientColor">
        <!-- Start color of the gradient. -->
        <attr name="android:startColor"/>
        <!-- Optional center color. -->
        <attr name="android:centerColor"/>
        <!-- End color of the gradient. -->
        <attr name="android:endColor"/>
        <!-- Type of gradient. The default type is linear. -->
        <attr name="android:type"/>

        <!-- Only applied to RadialGradient-->
        <!-- Radius of the gradient, used only with radial gradient. -->
        <attr name="android:gradientRadius"/>

        <!-- Only applied to SweepGradient / RadialGradient-->
        <!-- X coordinate of the center of the gradient within the path. -->
        <attr name="android:centerX"/>
        <!-- Y coordinate of the center of the gradient within the path. -->
        <attr name="android:centerY"/>

        <!-- LinearGradient specific -->
        <!-- X coordinate of the start point origin of the gradient.
             Defined in same coordinates as the path itself -->
        <attr name="android:startX"/>
        <!-- Y coordinate of the start point of the gradient within the shape.
             Defined in same coordinates as the path itself -->
        <attr name="android:startY"/>
        <!-- X coordinate of the end point origin of the gradient.
             Defined in same coordinates as the path itself -->
        <attr name="android:endX"/>
        <!-- Y coordinate of the end point of the gradient within the shape.
             Defined in same coordinates as the path itself -->
        <attr name="android:endY"/>

        <!-- Defines the tile mode of the gradient. SweepGradient doesn't support tiling. -->
        <attr name="android:tileMode"/>
    </declare-styleable>
    <declare-styleable name="GradientColorItem">
        <!-- The offset (or ratio) of this current color item inside the gradient.
             The value is only meaningful when it is between 0 and 1. -->
        <attr name="android:offset"/>
        <!-- The current color for the offset inside the gradient. -->
        <attr name="android:color"/>
    </declare-styleable>
</resources>